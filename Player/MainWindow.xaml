<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity" 
        xmlns:local="clr-namespace:Player" x:Class="Player.MainWindow" 
        xmlns:Command="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Platform"
        Title="MainWindow" Height="350" Width="230.6" MinHeight="300"
        Background="#333"
        >
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="KeyDown">
              <!--<Command:EventToCommand Command="{Binding Path=Shortcuts}" PassEventArgsToCommand="True"/>-->  
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <local:BoolToForegroundConverter x:Key="BoolToForegroundConverter"/>
            <LinearGradientBrush x:Key="ButtonBackground" StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="Gray" Offset="0"/>
                <GradientStop Color="#FF333333" Offset="1"/>
            </LinearGradientBrush>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="GreenYellow" />
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border Background="{StaticResource ButtonBackground}" VerticalAlignment="Stretch" CornerRadius="2" HorizontalAlignment="Stretch"/>
                                <Border x:Name="BorderPressed"  Opacity="0" Background="Gray" VerticalAlignment="Stretch" CornerRadius="0" HorizontalAlignment="Stretch"/>
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="MainContent" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BorderPressed" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="BorderPressed" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    </Window.Resources>
    <Grid Margin="0,0,3.8,0.4">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10*"/>
            <ColumnDefinition Width="50*"/>
            <ColumnDefinition Width="10*" MaxWidth="10"/>
            <ColumnDefinition Width="50*"/>
            <ColumnDefinition Width="10*" MaxWidth="10"/>
            <ColumnDefinition Width="50*"/>
            <ColumnDefinition Width="10*" MaxWidth="10"/>
            <ColumnDefinition Width="50*" />
            <ColumnDefinition Width="10*" MaxWidth="10"/>
            <ColumnDefinition Width="50*" />
            <ColumnDefinition Width="10*" MaxWidth="10"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*" />
            <RowDefinition Height="10*"/>
            <RowDefinition Height="2*" />
            <RowDefinition Height="10*"/>
            <RowDefinition Height="2*" />
            <RowDefinition Height="10*"/>
            <RowDefinition Height="2*" />
            <RowDefinition Height="10*"/>
            <RowDefinition Height="2*" />
            <RowDefinition Height="80*"/>
            <RowDefinition Height="2*" />
            <RowDefinition Height="10*"/>
            <RowDefinition Height="2*"/>
        </Grid.RowDefinitions>

        <!--Style="{StaticResource SimpleButtonStyle}" jezeli chce zmieniac styl buttonu po nazwie stylu-->
        <Button Name="Previous"
                Content="⏪"  Margin="7,4.4,0.4,0.2" Grid.Row="6" Grid.RowSpan="2" Grid.ColumnSpan="2"
                Command="{Binding Cmd_Prev, UpdateSourceTrigger=PropertyChanged}"/>
        <Button Name="Pause"
                Content="꡷"  Margin="0.4,4.4,7,0.2" Grid.Row="6" Grid.RowSpan="2" Grid.Column="3" Grid.ColumnSpan="2"
                Command="{Binding Cmd_Pause, UpdateSourceTrigger=PropertyChanged}"/>
        <Button Name="Play"
                Content="➤" Margin="1,4.4,0,0.2" Grid.Row="6" Grid.RowSpan="2" Grid.Column="5"
			    Command="{Binding Cmd_Play}"/>
        <Button Name="Stop"
                Content="⬛" Margin="7,4.4,0.4,0.2" Grid.Row="6" Grid.RowSpan="2" Grid.Column="6" Grid.ColumnSpan="2"
                Command="{Binding Cmd_Stop, UpdateSourceTrigger=PropertyChanged}"/>
        <Button Name="Next"
                Content="⏩" Margin="6.6,4.4,7,0.2" Grid.Row="6" Grid.RowSpan="2" Grid.Column="8" Grid.ColumnSpan="3"
                Command="{Binding Cmd_Next, UpdateSourceTrigger=PropertyChanged}"/>
        <Button Name="RandomMusic"
                Content="&#10536;" ToolTipService.BetweenShowDelay="0" Margin="0.4,0.067,7,0.333" Grid.Row="11" Grid.Column="3" Grid.ColumnSpan="2"
			    Command="{Binding RandomButton,UpdateSourceTrigger=PropertyChanged}"
                ToolTip="{Binding isRandom}" />

        <Slider Name="Volume"
                IsMoveToPointEnabled="True" Grid.Column="6" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Margin="6.8,22.2,5.8,1.4" Maximum="100"
                Value="{Binding Volume, UpdateSourceTrigger=PropertyChanged}" />
        <Label Name="Timer"
               Content="{Binding LabelTime, UpdateSourceTrigger=PropertyChanged}"
               Foreground="GreenYellow" Background="#3333" BorderBrush="LightGoldenrodYellow"
               Grid.Column="5" Margin="0,0.2,7,4" Grid.Row="1" Grid.ColumnSpan="6" Grid.RowSpan="2"/>

        <ListBox Name="Playlista" 
                  Grid.ColumnSpan="11" Margin="7,0,7,0.4" Grid.Row="9" BorderThickness="4"
                 Foreground="GreenYellow" Background="#3333" BorderBrush="#FF3D3D3D"
                 ItemsSource="{Binding MusicList, UpdateSourceTrigger=PropertyChanged}"  
                 SelectedIndex="{Binding SelectedIndex}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" 
                               Foreground="{Binding IsPlaying, Converter={StaticResource BoolToForegroundConverter}}"/> 
                </DataTemplate>
            </ListBox.ItemTemplate>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem" >

                    <!--<Style.Triggers> zamiast tego jest binding w textBlock-->
                        <!--<DataTrigger Binding="{Binding IsPlaying}" Value="true">
                            <Setter Property="Foreground" Value="Yellow" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsPlaying}" Value="false">
                            <Setter Property="Foreground" Value="YellowGreen" />
                        </DataTrigger>
                    </Style.Triggers>-->
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="DarkRed"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="DarkRed"/>
                    </Style.Resources>

                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>

        <Menu Name="Menu" 
              Grid.ColumnSpan="2" Margin="7,0.067,0.4,4.133" Grid.Row="11" Grid.RowSpan="2">
            <Menu.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FF7C7C7C"/>
                    <GradientStop Color="#FF3A3A3A" Offset="1"/>
                </LinearGradientBrush>
            </Menu.Background>
            <MenuItem Width="35" Height="24" Foreground="GreenYellow" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center">
                <MenuItem.Header>
                    <TextBlock Text="..." VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,0,0,-4.8" FontSize="10"/>
                </MenuItem.Header>
                <MenuItem Header="SortBy" Foreground="YellowGreen" Background="#FF333333">
                    <MenuItem Header="Name" Command="{Binding SortBy_Name}"/>
                    <MenuItem Header="Path" Command="{Binding SortBy_Path}"/>
                    <MenuItem Header="Tittle" Command="{Binding SortBy_Title}"/>
                    <MenuItem Header="Random" Command="{Binding SortBy_Random}"/>
                </MenuItem>
                <MenuItem Header="List" Foreground="YellowGreen" Background="#FF333333">
                    <MenuItem Header="New List">
                        <MenuItem Header="Select Folder" Command="{Binding ListNew_Folder}" CommandParameter="true"/>
                        <MenuItem Header="Select Files" Command="{Binding ListNew_Files}" CommandParameter="true"/>
                    </MenuItem>
                    <MenuItem Header="Add" Command="{Binding ''}">
                        <MenuItem Header="Select Folder" Command="{Binding ListNew_Folder}" CommandParameter="false"/>
                        <MenuItem Header="Select Files" Command="{Binding ListNew_Files}" CommandParameter="false"/>
                    </MenuItem>
                    <MenuItem Header="Clear" Command="{Binding List_Clear}"/>
                    <MenuItem Header="Save as Playlist" Command="{Binding ListSavePlaylist}"/>
                    <MenuItem Header="Load PlayList" Command="{Binding ListLoadPlaylist}"/>
                </MenuItem>
            </MenuItem>
        </Menu>
        <Slider Name="Slider_Position" 
                IsMoveToPointEnabled="True" Grid.ColumnSpan="11" Grid.Row="4" Grid.RowSpan="2" Margin="7,4.6,7,0.6" 
			    Maximum="{Binding Duration, UpdateSourceTrigger=PropertyChanged}"
			    Value="{Binding RewindMusic}"
			    TickFrequency="11" Foreground="#00000000" Interval="36" Background="#00000000" IsManipulationEnabled="True"
                >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="LostMouseCapture" >
                    <i:InvokeCommandAction Command="{Binding ChangePosition}" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseUp" >
                    <i:InvokeCommandAction Command="{Binding ChangePosition}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

        </Slider>

        <TextBox Name="trash"
                 HorizontalAlignment="Left" Margin="7,0.2,0,0" Grid.Row="1" Grid.RowSpan="3" VerticalAlignment="Top" Grid.ColumnSpan="4" Width="75" Height="52"
                 Text="{Binding Duration, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
    </Grid>
</Window>
